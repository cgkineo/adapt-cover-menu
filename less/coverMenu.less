@item-max-count: 10;
@device-large: ~"(min-width: "(@device-width-medium + 1)~")";
@non-mobile: ~"html:not(.os-ios):not(.os-android)";


.generate-styles;

.generate-styles(@i: 0) when (@i <=@item-max-count) {
  .container-layout;
  .indicator-active;
  .item-last;
  .generate-styles(@i + 1);
}

.covermenu {
  position: relative;
  overflow: hidden;
}

.location-menu {

  &.os-ios #a11y-focusguard,
  &.os-android #a11y-focusguard {
    display: none;
  }



  @media @device-large {

    &.os-ios,
    &.os-android {

      &,
      body,
      .covermenu,
      .covermenu-item__container {
        height: 100%;
        overflow: hidden;
      }

      #wrapper {
        height: calc(100vh ~"-"@navigation-height);
      }
    }

    &.os-android #wrapper {
      position: fixed;
    }
  }
}


.covermenu-item__container {
  @media @device-large {
    display: flex;

    &:not(.no-transition) {
      transition: margin-left 0.4s ease-in-out;
    }
  }
}

.container-layout() {
  @media @device-large {
    .covermenu-item__container {
      & when (@i > 0) {
        [data-item-count="@{i}"] & {
          width: unit(@i * 100, %);
        }
      }

      & when (@i < @item-max-count) {
        [data-item-index="@{i}"] & {
          margin-left: unit(-@i * 100, %);
        }
      }
    }
  }
}


.covermenu-item:not(.covermenu-item__indicator) {
  width: 100%;
  background-color: @menu-item;
  background-position: center;
  background-size: cover;
  color: @menu-item-inverted;

  &:nth-child(even) {
    background-color: spin(@menu-item, -20);
  }

  @media @device-large {
    @{non-mobile} & {
      min-height: calc(100vh ~"-"@navigation-height);
    }
  }
}

.covermenu-item {

  &__inner {
    max-width: 900px;
    margin: 0 auto;
  }

  &__content {
    padding: 1rem;
  }

  &__title {
    .menu-title;
    margin-bottom: @menu-item-title-margin;
  }

  &__body {
    margin-bottom: @menu-item-body-margin;
  }

  &__duration {
    margin-bottom: @menu-item-body-margin;
  }

  &__button {
    background-color: @menu-item-btn-color;
    color: @menu-item-btn-color-inverted;

    .no-touch &:not(.is-disabled):not(.is-locked):hover {
      background-color: @menu-item-btn-color-hover;
      color: @menu-item-btn-color-inverted-hover;
      .transition(background-color @duration ease-in, color @duration ease-in; );
    }
  }

}

.covermenu-item__control {
  &.icon {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
  }

  &__back {
    left: 0;

    [data-item-index="0"] & {
      .control-disabled;
    }
  }

  &__next {
    right: 0;
  }

  @{non-mobile} &:hover {
    .transition(color @duration ease-in);
  }

  @media (max-width: @device-width-medium) {
    display: none;
  }
}

.control-disabled() {
  display: none;
}

.item-last() {
  & when (@i > 0) and (@i < @item-max-count) {
    @index-last: @i - 1;

    [data-item-count="@{i}"][data-item-index="@{index-last}"] .covermenu-item__control {
      &__next {
        .control-disabled;
      }
    }
  }
}


.covermenu-item__indicator__container {
  position: absolute;
  bottom: 0;
  left: 50%;
  transform: translateX(-50%);

  @media (max-width: @device-width-medium) {
    display: none;
  }
}

.covermenu-item__indicator {
  display: inline-block;
  padding: 4px 2px;

  &__button {
    position: relative;
    width: 24px;
    height: 24px;
    border: 3px @progress solid;
    border-radius: 50%;
    background-color: transparent;

    @{non-mobile} &:hover {
      .transition(border-color @duration ease-in);
      border-color: @progress-inverted;
    }

    &__inner {
      position: absolute;
      top: 50%;
      left: 50%;
      height: 14px;
      margin: -7px 0 0 -7px;
      background-color: @progress;

      .is-visited & {
        width: 7px;
        border-radius: 14px 0 0 14px;
      }

      .is-complete & {
        width: 14px;
        border-radius: 50%;
      }

      @{non-mobile} .covermenu-item__indicator__button:hover & {
        .transition(background-color @duration ease-in, color @duration ease-in; );
        background-color: @progress-inverted;
      }
    }
  }

}

.indicator-active() {
  & when (@i < @item-max-count) {
    [data-item-index="@{i}"] {
      & & .covermenu-item__indicator__button {
        // border-color: @progress-inverted;
        border-color: red;
        cursor: default;
      }

      & & .covermenu-item__indicator__button__inner {
        //background-color: @progress-inverted;
        background-color: blue;
      }
    }
  }
}